<launch>

  <!-- main -->
  <node name="rally_driver" pkg="rally_3rd" type="main.py" output="screen" />


  <!-- rosbag 파일 재생: 'rosbag'패키지에 있는 'play'파일을 'player'라는 이름으로 노드를 실행한다. -->
  <!--
    'rosbag' 옵션
      -l: 반복 재생
  -->
  <!-- <node pkg="rosbag" name="player" type="play" args="-l /media/psf/Downloads/cam_topic_stdrive.bag" /> -->


  <!-- rosbag 기록: 'rosbag'패키지에 있는 'record'파일을 'recoder'라는 이름으로 노드를 실행한다. -->
  <arg name="record" default="false" 
      doc="record 변수를 생성하고, 기본값을 false로 설정한다. 옵션으로 기록을 사용하기 위해 생성하였다." />
  <!-- disable compressed depth plugin for image transport -->
  <group ns="usb_cam/image_raw" >
  <rosparam param="disable_pub_plugins">
    - 'image_transport/compressedDepth'
    - 'image_transport/theora'
  </rosparam>
  </group>
  <!--
    'rosbag' 옵션
      -o PREFIX: 'PREFIX'는 '$(find sliding_window)/rosbag/track'가 되는데, 이때 출력되는 rosbag 파일은
                '$(sliding_window 패키지 경로)/rosbag/track_2021-01-29-23-51-17.bag'와 같이 끝에 기록이 시작된 시간이 붙는다.
    <if> tag: 'record' 변수값이 true일 경우 해당 노드가 실행된다.
  -->
  <node name="recoder" pkg="rosbag" type="record"
        args="-o /home/$(env USER)/Desktop/test.bag /usb_cam/image_raw /ar_pose_marker /scan /tf" if="$(arg record)" />
        <!-- args="-x '(.*)/theora | (.*)/theora/(.*) | (.*)/compressedDepth' -o $(find sliding_window)/rosbag/track /usb_cam/image_raw" if="$(arg record)" /> -->
        <!-- args="-x '(.*)/theora | (.*)/theora/(.*) | (.*)/compressedDepth' -ajo $(find sliding_window)/rosbag/track" if="$(arg record)" /> -->


  <!-- xycar motor -->
  <node name="xycar_motor" pkg="xycar_motor" type="xycar_motor.py" output="screen" >
    <param name="angle_offset" value="0" />
  </node>

  <!-- usb_cam -->
  <node name="usb_cam" pkg="usb_cam" type="usb_cam_node" output="screen" >
    <param name="video_device"     value="/dev/videoCAM"                                />
    <param name="autoexposure"     value="false"                                        />
    <param name="exposure"         value="48"                                           />
    <param name="image_width"      value="640"                                          />
    <param name="image_height"     value="480"                                          />
    <param name="pixel_format"     value="yuyv"                                         />
    <param name="camera_frame_id"  value="usb_cam"                                      />
    <param name="camera_name"      value="usb_cam"                                      />
    <param name="camera_info_url"  value="file://$(find usb_cam)/calibration/usb_cam.yaml"  />
    <param name="io_method"        value="mmap"                                         />
  </node>

  <!-- ar tag -->
  <node name="ar_track_alvar" pkg="ar_track_alvar" type="individualMarkersNoKinect" respawn="false" output="screen">
    <param name="marker_size"                type="double" value="16.0" />
    <param name="max_new_marker_error"       type="double" value="0.05" />
    <param name="max_track_error"            type="double" value="0.05" />
    <param name="output_frame"               type="string" value="usb_cam" />
    <remap from="camera_image" to="/usb_cam/image_raw"/>
    <remap from="camera_info" to="/usb_cam/camera_info"/>
  </node>

  <!-- lidar -->
  <node name="ydlidar_node"  pkg="ydlidar_ros"  type="ydlidar_node" output="screen" respawn="false" >
    <param name="port"         type="string" value="/dev/ttyRPL"/>  
    <param name="baudrate"         type="int" value="230400"/>  
    <param name="frame_id"     type="string" value="laser_frame"/>
    <param name="resolution_fixed"    type="bool"   value="true"/>
    <param name="auto_reconnect"    type="bool"   value="true"/>
    <param name="reversion"    type="bool"   value="true"/>
    <param name="angle_min"    type="double" value="-180" />
    <param name="angle_max"    type="double" value="180" />
    <param name="range_min"    type="double" value="0.1" />
    <param name="range_max"    type="double" value="16.0" />
    <param name="ignore_array" type="string" value="" />
    <param name="frequency"    type="double" value="10"/>
    <param name="samp_rate"    type="int"    value="5"/>
  </node>

  <!-- ultrasonic -->
  <node pkg="xycar_ultrasonic" type="xycar_ultrasonic.py" name="xycar_ultrasonic" output="screen" />

  <!-- 9dof IMU -->
  <!-- <node pkg="xycar_imu" type="9dof_imu_node.py" name="xycar_imu" output="screen">
    <param name="rviz_mode" type="string" value="true" />
  </node> -->

</launch>
